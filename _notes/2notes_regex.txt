1.字符种类[]
任意字符.  字符集中括号[](包括连续字符集-， 非连续字符集和取反字符集^, 默认长度为1个)
2.字符个数{m}{m,}{m,n} 个数不写时，默认值是1
3.以什么开头^
4.以什么结尾$
5.固定部分用常量字符串即可

子模式.分组小括号()  选择符|  分隔符.提取域？
正则表达式即用子模式()来提取匹配的字符串
转义字符

正则表达式基础语法 "^([]{})([]{})([]{})$"
正则字符串 = "开始（[包含内容]{长度}）（[包含内容]{长度}）（[包含内容]{长度}）结束" 	
?,*,+,\d,\w 这些都是简写的,完全可以用[]和{}代替，在(?:)(?=)(?!)(?<=)(?<!)(?i)(*?)(+?)这种特殊组合情况下除外。

*?、+?、??、{m,n}?添加问号?使* + ? {m,n}变成非贪婪模式。注：我们一般使用非贪婪模式来提取。
数量词的贪婪模式与非贪婪模式
Python里数量词默认是贪婪的（在少数语言里也可能是默认非贪婪），总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。
例如：正则表达式”ab*”如果用于查找”abbbc”，将找到”abbb”。而如果使用非贪婪的数量词”ab*?”，将找到”a”。
----------------------------------------------------------------------
开头.结尾.包含.不包含.类型.量词
常用匹配元字符：
	^ 开始
　　$ 结尾
　　[](,分割 -连续)包含	一个字符长度 
	[^] 不包含,				一个字符长度	
	. 任何单个字符(\. 字符点)
常用次数限定符：		
	{n}	重复n次
	{n,}	重复n次或更多次
	{n,m}	重复n到m次,匹配长度	
常用分段符：
　　() 域段
　　| 或
　　\ 转义
-----------------------------------------------------
等价：
？等价于匹配长度{0,1} 重复0次或1次
*等价于匹配长度{0,}  重复0次或更多次
+等价于匹配长度{1,} 重复1次或更多次
\d等价于[0-9]
\w等价于[A-Za-z0-9_]。
	

\d	匹配数字
\w	匹配字母或数字或下划线或汉字
\s	匹配任意的空白符
\b	匹配单词的开始或结束

\W	匹配任意不是字母，数字，下划线，汉字的字符
\S	匹配任意不是空白符的字符
\D	匹配任意非数字的字符
\B	匹配不是单词开头或结束的位置
--------------------------------------------------　
实例：
字符串；tel:086-0666-88810009999
原始正则："^tel:[0-9]{1,3}-[0][0-9]{2,3}-[0-9]{8,11}$" 
速记理解：开始 "tel:普通文本"[0-9数字]{1至3位}"-普通文本"[0数字][0-9数字]{2至3位}"-普通文本"[0-9数字]{8至11位} 结束"
等价简写后正则写法："^tel:\d{1,3}-[0]\d{2,3}-\d{8,11}$" ，简写语法不是所有语言都支持。

[A-Z] 26个大写字母
[a-z] 26个小写字母
[0-9] 0至9数字
A-Za-z0-9] 26个大写字母、26个小写字母和0至9数字
[^aeiou]	匹配除了aeiou这几个字母以外的任意字符
