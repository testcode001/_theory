代码整洁之道，不要写一句多余的代码
敏捷开发、设计架构即任务分工不同
各环节详细日志记录
1.抽取.代码复用.文件复用.view对象复用(功能复用)：便于修改
面向对象.类：封装、继承、多态。便于管理
2.接口就是一种标准，一种规范，大家都按照这个标准共同合作
模块之间面向接口编程：便于模块替换，便于扩展。即专职增加一层，实现解耦 (新增类和方法而不是修改已有代码)	
对系统来说，新增加一个类的代码风险要大大低于对已有类代码的修改.我觉得这个也是设计模式的立足点吧
(如果你喜欢修改已有代码,那么设计模式就没有多大意义了
http://blog.csdn.net/dan_xp/article/details/1820852
隔离，解耦、只用修改一边，而不用两边同时修改 (类似代理的作用)
(dao层面向接口编程，更改数据库时，只需更改底层实现而无需修改上层代码)
3.设计模式.代码重构：(弱耦合、可复用、MVC结构)
组合优于继承：避免父类修改时，造成子类的大量改动
数据驱动：找到相同点，定义格式，不同点采用数据区分
单例模式：1.私有化构造函数、2.自身属性成员、3.public static getInstance()方法 
观察者模式: 观察对象、被观察对象又叫主题对象、观察对象需要在被观察对象上注册、被观察对象调用notify方法，观察对象接到通知后作出相应改变
工厂
动态代理、包装
包装模式与代理模式的区别
适配器模式：中间人，把接口不一致的两个插件接合起来
解释数据库表每个字段的意思
ihttp://blog.csdn.net/rokii/article/details/4046098
http://bbs.csdn.net/topics/390346645?page=1
rpc接口都含有参数，参数为request对象，便于参数扩展
4.每个对象都有其唯一标示符id (全局唯一标识符) 
5.增加flag标记/唯一标示符：默认初始化为0 (快速识别、批量处理、if/while判断) (按规范、自动化地执行)
开关boolean flag = false; flag = !flag;
算法：
查找：顺序查找、二分法查找、哈希查找HashMap、分类查找、动态规划
排序：冒泡排序、选择排序.for循环二次嵌套+数值交换、堆排序、快速排序
http://bbs.2cto.com/read.php?tid=325539
a、b数值交换：c=a;a=b;b=c
递归算法：即方法内部调用自己
加密.解密
链表反转
排列组合算法、bt5

配置文件：避免程序再次编译。(可能只需再部署一下即可) 
回调函数：(xml解析+反射) 即底层调用上层的函数。底层定义接口.回调函数及set方法，上层定义实现类并向底层传递。(回调函数.监听器)
c++宏定义用来实现回调函数、字符串替换：底层写宏定义，上层定义宏实现
方法先调用自身的，再调用其他的。父类引用指向子类对象时，实例方法先调用子类的，即多态性。
缓存是永恒的话题：内存缓存>数据库缓存>磁盘缓存>网络缓存
大数据、分布式、多线程同步、高并发、队列、独立缓存服务器
系统间调用：客户端-服务器模式
webService远程进程调用：类调用方法，传递参数、数据传输协议(xml、json)
B/S：http协议
C/S：Socket连接，TCP.UDP协议
1.httpClient直接访问
2.提供jar包(.so库)，开放api接口	(封装了httpClient调用)

事件类型
事件状态
事件传递机制.事件处理机制
图形图像处理.图像渲染机制：z轴由底层向上层一层一层渲染
音视频编解码

内存管理：
数据区(静态域、常量池)：常量、静态数据
代码区：
栈区：如引用、局部变量、基本数据类型，方法执行完后自动释放内存 (大小固定放在栈内存)
堆区：如对象 (大小不固定放在堆内存)
智能指针的一种实现方式就是引用计数
垃圾回收器的实现原理
讲解：按顺序画uml类图

rpc： 
服务器端：接口.注解、实现类
客户端：接口.注解+动态代理InvocationHandler.CGlib
--------------------------------------------------------------------------------
技术：
android：android内核剖析、android源码分析.罗升阳.github上android源码
cocos2d-x、c++
大数据：Hadoop、NoSql、Spark
图形图像、矩阵旋转
音.视频编解码
Linux命令.shell脚本编程
python
OC

识别图片验证码
破解无线网卡密码

产品：
IM
游戏cocos2d-x
音.视频编解码
基于xmpp通讯协议的IM (类似于邮件协议的产品)
消息推送功能
web应用(数据传输协议)
spark语言转换功能

外语学习的真实方法及误区
http://kb.cnblogs.com/page/128340/
外语笔记
代码阅读方法与实践
文件读写、数据传输即流的功能：内存io、磁盘io、网络io

1.AsyncTask/开启新线程执行耗时操作
2.Handler Message Looper MessageQueue线程间通信

消息推送：后台服务+Socket连接
1.如何保持长连接  (2g.3g.wifi切网、手机没信号、手机没电、手机关机)
2.心跳时间






